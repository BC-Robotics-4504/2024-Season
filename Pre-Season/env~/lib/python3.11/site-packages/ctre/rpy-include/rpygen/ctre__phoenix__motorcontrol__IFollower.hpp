
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <../_api_cpp_sim/include/ctre/phoenix/motorcontrol/IFollower.h>

#include <ctre/phoenix/motorcontrol/IMotorController.h>




namespace rpygen {

using namespace ctre::phoenix::motorcontrol;



template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_ctre__phoenix__motorcontrol__IFollower :
    CfgBase
{
    using Base = ctre::phoenix::motorcontrol::IFollower;

    using override_base_Follow_RTIMotorController = ctre::phoenix::motorcontrol::IFollower;
    using override_base_ValueUpdated_v = ctre::phoenix::motorcontrol::IFollower;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_ctre__phoenix__motorcontrol__IFollower : PyTrampolineBase, virtual py::trampoline_self_life_support {
    using PyTrampolineBase::PyTrampolineBase;



#ifndef RPYGEN_DISABLE_Follow_RTIMotorController
    void Follow(ctre::phoenix::motorcontrol::IMotorController& masterToFollow) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(IFollower, PYBIND11_TYPE(void), LookupBase,
            "follow", Follow, masterToFollow);
    }
#endif

#ifndef RPYGEN_DISABLE_ValueUpdated_v
    void ValueUpdated() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(IFollower, PYBIND11_TYPE(void), LookupBase,
            "valueUpdated", ValueUpdated, );
    }
#endif




};

}; // namespace rpygen
