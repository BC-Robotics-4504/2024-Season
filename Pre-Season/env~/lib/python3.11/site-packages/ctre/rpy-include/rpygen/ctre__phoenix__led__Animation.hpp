
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <../_api_cpp_sim/include/ctre/phoenix/led/Animation.h>

#include <ctre/phoenix/led/BaseStandardAnimation.h>
#include <ctre/phoenix/led/BaseTwoSizeAnimation.h>




namespace rpygen {

using namespace ctre::phoenix::led;



template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_ctre__phoenix__led__Animation :
    CfgBase
{
    using Base = ctre::phoenix::led::Animation;

    using override_base_GetBaseStandardAnimation_v = ctre::phoenix::led::Animation;
    using override_base_GetBaseTwoSizeAnimation_v = ctre::phoenix::led::Animation;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_ctre__phoenix__led__Animation : PyTrampolineBase, virtual py::trampoline_self_life_support {
    using PyTrampolineBase::PyTrampolineBase;



#ifndef RPYGEN_DISABLE_GetBaseStandardAnimation_v
    BaseStandardAnimation * GetBaseStandardAnimation() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(Animation, PYBIND11_TYPE(BaseStandardAnimation *), LookupBase,
            "getBaseStandardAnimation", GetBaseStandardAnimation, );
    }
#endif

#ifndef RPYGEN_DISABLE_GetBaseTwoSizeAnimation_v
    BaseTwoSizeAnimation * GetBaseTwoSizeAnimation() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(Animation, PYBIND11_TYPE(BaseTwoSizeAnimation *), LookupBase,
            "getBaseTwoSizeAnimation", GetBaseTwoSizeAnimation, );
    }
#endif




};

}; // namespace rpygen
